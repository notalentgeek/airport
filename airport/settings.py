"""
Django settings for airport project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+=r0)qt$7a(y%k*r876=3^c9!nzqgk3_qx$#pyff3q7(wv4(i-'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True

#ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djcelery',
    'djng',
    'airport_management.apps.AirportManagementConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'airport.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'airport.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


""" Adjusted variables. """
ALLOWED_HOSTS = ["*"]
DEBUG = True
TIME_ZONE = "Europe/Amsterdam"

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATIC_URL = "/static/"

""" Deployment configurations. """
CONN_MAX_AGE = None

""" Set these to false for non-HTTP server. """
CSRF_COOKIE_SECURE = False
SESSION_COOKIE_SECURE = False

""" Celery and RabbitMQ configurations for Django. """

""" Variable for RabbitMQ. """
BROKER_URL = "amqp://admin:asdasdasd@localhost:5672/adminvhost"
#BROKER_URL = os.environ.get("BROKER_URL", "")
#BROKER_URL = "amqp://admin:asdasdasd@localhost:5672/"

"""
RABBIT_HOSTNAME = os.environ.get("RABBIT_PORT_5672_TCP", "rabbit")

if RABBIT_HOSTNAME.startswith("tcp://"):  
    RABBIT_HOSTNAME = RABBIT_HOSTNAME.split("//")[1]

BROKER_URL = os.environ.get("BROKER_URL", "")
if not BROKER_URL:  
    BROKER_URL = "amqp://{user}:{password}@{hostname}/{vhost}/".format(
        user=os.environ.get("RABBIT_ENV_USER", "admin"),
        password=os.environ.get("RABBIT_ENV_RABBITMQ_PASS", "asdasdasd"),
        hostname=RABBIT_HOSTNAME,
        vhost=os.environ.get("RABBIT_ENV_VHOST", ""))
"""

""" Variables for CeleryBeat. """
CELERYBEAT_SCHEDULER = "djcelery.schedulers.DatabaseScheduler"
CELERY_RESULT_BACKEND = "djcelery.backends.database:DatabaseBackend"

""" Celery. """
CELERY_ACCEPT_CONTENT = ["json"]
CELERY_RESULT_SERIALIZER = "json"
CELERY_TASK_SERIALIZER = "json"
CELERY_TIMEZONE = "Europe/Amsterdam"

""" Import Celery tasks. """
CELERY_IMPORTS = ("airport_management.tasks",)